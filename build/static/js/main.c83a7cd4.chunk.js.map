{"version":3,"sources":["store/actions/index.js","store/constants/actions-types.js","components/SearchBar.js","components/Installation.js","components/Carte.js","Pages/Home.js","store/reducers/fetchReducer.js","store/reducers/index.js","store/index.js","utils/persistingState.js","components/InstallationDetails.js","components/Equipements.js","components/Activites.js","Pages/Index.js","App.js","index.js"],"names":["fetchAllInstallation","dispatch","axios","get","then","response","data","type","payload","SearchBar","Component","componentWillMount","this","props","getCodePostal","getVille","render","ville","villes","map","commune","index","key","value","code","code_postal","className","htmlFor","id","onChange","e","selectByVille","target","selectByCode","onClick","connect","state","fetch","code_postaux","res","Installation","React","InstallationsRows","installations","installation","i","setCodeInstallation","noDeLInstallation","to","nomUsuelDeLInstallation","codePostal","nomDeLaCommune","style","height","width","overflow","withRouter","Carte","componentDidMount","mapboxgl","Map","container","containerMap","center","zoom","locations","localisation","tabLongLat","split","push","geometry","coordinates","parseFloat","on","addSource","features","loadImage","error","image","addImage","addLayer","source","layout","ref","el","paddingLeft","borderRadius","dataChange","Home","initialState","equipements","activites","code_installation","code_equipement","activiteChargee","rootReducer","action","filter","parseInt","combineReducers","fetchReducer","serializedState","localStorage","getItem","JSON","parse","err","loadState","middleware","thunk","store","createStore","compose","applyMiddleware","subscribe","throttle","stringify","setItem","saveState","getState","InstallationDetails","fetchInstallationByCodeInstallation","listStyle","style2","display","justifyContent","alignContent","departement","nomVoie","desserteBus","desserteTrain","desserteMetro","Equipements","fetchEquipementByCode","Equipement","equipement","setCodeEquipement","numeroDeLaFicheEquipement","Activites","console","log","fetchActivitesByCode","componentDidUpdate","undefined","activite","activiteLibelle","Index","App","path","exact","component","accessToken","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c83a7cd4.chunk.js","sourcesContent":["import {\n  FETCH_ALL_INSTALLATION,\n  FETCH_CODE_INSTALLATION,\n  FETCH_CODE_EQUIPEMENT,\n  FETCH_CODE_ACTIVITE,\n  SET_CODE_INSTALLATION,\n  SET_CODE_EQUIPEMENT,\n  GET_CODE_POSTAL,\n  SELECT_BY_CODE_POSTAL,\n  GET_VILLE,\n  SELECT_BY_VILLE\n} from \"../constants/actions-types.js\";\n\nimport axios from \"axios\";\n\nexport const fetchAllInstallation = () => dispatch => {\n  axios\n    .get(\"http://localhost:4001/api/installation\")\n    .then(response => response.data)\n    .then(data => dispatch({ type: FETCH_ALL_INSTALLATION, payload: data }));\n};\n\nexport const fetchInstallationByCodeInstallation = payload => dispatch => {\n  dispatch({ type: FETCH_CODE_INSTALLATION, payload: payload });\n};\n\nexport const fetchEquipementByCode = payload => dispatch => {\n  axios\n    .get(`http://localhost:4001/api/equipement/installation/${payload}`)\n    .then(res => res.data)\n    .then(data => dispatch({ type: FETCH_CODE_EQUIPEMENT, payload: data }));\n};\n\nexport const fetchActivitesByCode = payload => dispatch => {\n  axios\n    .get(`http://localhost:4001/api/activite/equipement/${payload}`)\n    .then(res => res.data)\n    .then(data => dispatch({ type: FETCH_CODE_ACTIVITE, payload: data }));\n};\n\nexport const setCodeInstallation = payload => dispatch => {\n  dispatch({ type: SET_CODE_INSTALLATION, payload: payload });\n};\n\nexport const setCodeEquipement = payload => dispatch => {\n  dispatch({ type: SET_CODE_EQUIPEMENT, payload: payload });\n};\n\nexport const getCodePostal = () => dispatch => {\n  axios\n    .get(\"http://localhost:4001/api/installation/code\")\n    .then(res => res.data)\n    .then(data => dispatch({ type: GET_CODE_POSTAL, payload: data }));\n};\n\nexport const selectByCode = payload => dispatch => {\n  dispatch({ type: SELECT_BY_CODE_POSTAL, payload: payload });\n};\n\nexport const getVille = () => dispatch => {\n  axios\n    .get(\"http://localhost:4001/api/installation/ville\")\n    .then(res => res.data)\n    .then(data => dispatch({ type: GET_VILLE, data: data }));\n};\n\nexport const selectByVille = payload => dispatch => {\n  dispatch({ type: SELECT_BY_VILLE, payload: payload });\n};\n","export const FETCH_ALL_INSTALLATION = \"FETCH_ALL_INSTALLATION\";\n\nexport const FETCH_CODE_INSTALLATION = \"FETCH_CODE_INSTALLATION\";\n\nexport const FETCH_CODE_EQUIPEMENT = \"FETCH_CODE_EQUIPEMENT\";\n\nexport const FETCH_CODE_ACTIVITE = \"FETCH_CODE_ACTIVITE\";\n\nexport const SET_CODE_INSTALLATION = \"SET_CODE_INSTALLATION\";\n\nexport const SET_CODE_EQUIPEMENT = \"SET_CODE_EQUIPEMENT\";\n\nexport const GET_CODE_POSTAL = \"GET_CODE_POSTAL\";\n\nexport const SELECT_BY_CODE_POSTAL = \"SELECT_BY_CODE_POSTAL\";\n\nexport const GET_VILLE = \"GET_VILLE\";\n\nexport const SELECT_BY_VILLE = \"SELECT_BY_VILLE\";\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  getCodePostal,\n  getVille,\n  selectByCode,\n  selectByVille,\n  fetchAllInstallation\n} from \"../store/actions\";\nimport \"../css/SearchBar.css\";\n\nexport class SearchBar extends Component {\n  componentWillMount() {\n    this.props.getCodePostal();\n    this.props.getVille();\n  }\n\n  render() {\n    const ville = this.props.villes.map((commune, index) => (\n      <option key={index} value={commune}>\n        {commune}\n      </option>\n    ));\n\n    const code = this.props.code_postal.map((code, index) => (\n      <option key={index} value={code}>\n        {code}\n      </option>\n    ));\n\n    return (\n      <div>\n        <form className=\"search-form\">\n          <label htmlFor={\"Ville\"}>Ville : </label>\n          <select\n            className=\"custom-select col-sm-2\"\n            id={\"Ville\"}\n            onChange={e => this.props.selectByVille(e.target.value)}\n          >\n            {ville}\n          </select>\n          <label htmlFor={\"code_postal\"}>Code Postal : </label>\n          <select\n            className=\"custom-select col-sm-2\"\n            id={\"code_postal\"}\n            onChange={e => this.props.selectByCode(e.target.value)}\n          >\n            {code}\n          </select>\n          <button\n            className=\"btn btn-secondary\"\n            onClick={e => this.props.fetchAllInstallation()}\n          >\n            Reset\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  code_postal: state.fetch.code_postaux,\n  villes: state.fetch.villes\n});\n\nexport default connect(mapStateToProps, {\n  getCodePostal,\n  selectByCode,\n  fetchAllInstallation,\n  selectByVille,\n  getVille\n})(SearchBar);\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  fetchAllInstallation,\n  setCodeInstallation\n} from \"../store/actions/index\";\n//import \"../css/Installations.css\";\n\nclass Installation extends React.Component {\n  componentWillMount() {\n    this.props.fetchAllInstallation();\n  }\n\n  /*Partie rendu html */\n\n  render() {\n    const TableStyle = {\n      height: \"82vh\",\n      width: \"100vh\",\n      overflow: \"auto\"\n    };\n\n    const InstallationsRows = this.props.installations.map(\n      (installation, i) => (\n        <tr\n          className=\"table-dark\"\n          key={i}\n          onClick={e =>\n            this.props.setCodeInstallation(installation.noDeLInstallation)\n          }\n        >\n          <td>\n            <Link to={`/installation/${installation.noDeLInstallation}`}>\n              {installation.nomUsuelDeLInstallation}\n            </Link>\n          </td>\n          <td>{installation.codePostal}</td>\n          <td>{installation.nomDeLaCommune}</td>\n        </tr>\n      )\n    );\n    return (\n      <div style={TableStyle} className=\"tableau\">\n        <table className=\"table table-hover\">\n          <thead>\n            <tr className=\"thead-dark table-bordered\">\n              <th>Nom de l'installation</th>\n              <th>Code Postal</th>\n              <th>Ville</th>\n            </tr>\n          </thead>\n          <tbody>{InstallationsRows}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  installations: state.fetch.installations\n});\n\nexport default withRouter(\n  connect(mapStateToProps, { fetchAllInstallation, setCodeInstallation })(\n    Installation\n  )\n);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport mapboxgl from \"mapbox-gl\";\nimport { fetchAllInstallation } from \"../store/actions\";\n\nexport class Carte extends Component {\n  componentDidMount() {\n    const map = new mapboxgl.Map({\n      container: this.containerMap,\n      style: \"mapbox://styles/mapbox/streets-v11\",\n      center: [-1.8158, 47.278],\n      zoom: 7\n    });\n\n    //console.log(this.props.installations);\n\n    const locations = [];\n    for (let installation of this.props.installations) {\n      if (installation.localisation !== \"\") {\n        let tabLongLat = installation.localisation.split(\",\");\n        locations.push({\n          type: \"Feature\",\n          geometry: {\n            type: \"Point\",\n            coordinates: [parseFloat(tabLongLat[1]), parseFloat(tabLongLat[0])]\n          }\n        });\n      }\n    }\n\n    map.on(\"load\", () => {\n      map.addSource(\"point\", {\n        type: \"geojson\",\n        data: {\n          type: \"FeatureCollection\",\n          features: locations\n        }\n      });\n      map.loadImage(\n        \"https://img.icons8.com/metro/52/000000/marker.png\",\n        (error, image) => {\n          if (error) throw error;\n          map.addImage(\"map-marker\", image);\n        }\n      );\n      map.addLayer({\n        id: \"points\",\n        type: \"symbol\",\n        source: \"point\",\n        layout: {\n          \"icon-image\": \"map-marker\",\n          \"icon-size\": 0.25\n        }\n      });\n    });\n  }\n\n  render() {\n    const mapStyle = {\n      width: \"100vh\",\n      height: \"82vh\",\n      paddingLeft: \"3vh\",\n      borderRadius: \"10px\"\n    };\n    return <div ref={el => (this.containerMap = el)} style={mapStyle}></div>;\n  }\n}\nconst mapStateToProps = state => ({\n  installations: state.fetch.installations,\n  dataChange: state.fetch.dataChange\n});\nexport default connect(mapStateToProps, { fetchAllInstallation })(Carte);\n","import React from \"react\";\nimport SearchBar from \"../components/SearchBar\";\nimport Installation from \"../components/Installation\";\nimport Carte from \"../components/Carte\";\nimport \"../css/Home.css\";\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1>Installations Sportives en Loire-Atlantique</h1>\n        <SearchBar />\n        <div className=\"container\">\n          <Installation />\n          <Carte />\n        </div>\n      </div>\n    );\n  }\n}\nexport default Home;\n","import {\n  FETCH_ALL_INSTALLATION,\n  FETCH_CODE_INSTALLATION,\n  FETCH_CODE_EQUIPEMENT,\n  FETCH_CODE_ACTIVITE,\n  SET_CODE_INSTALLATION,\n  SET_CODE_EQUIPEMENT,\n  GET_CODE_POSTAL,\n  SELECT_BY_CODE_POSTAL,\n  GET_VILLE,\n  SELECT_BY_VILLE\n} from \"../constants/actions-types.js\";\n\nconst initialState = {\n  installations: [],\n  equipements: [],\n  activites: [],\n  installation: [],\n  code_installation: \"\",\n  code_equipement: \"\",\n  code_postaux: [],\n  villes: [],\n  activiteChargee: false,\n  dataChange: false\n};\n\nfunction rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_ALL_INSTALLATION:\n      return {\n        ...state,\n        installations: action.payload\n      };\n    case FETCH_CODE_INSTALLATION:\n      return {\n        ...state,\n        installation: state.installations.filter(\n          installation =>\n            parseInt(installation.noDeLInstallation) ===\n            parseInt(action.payload)\n        ),\n        activiteChargee: false,\n        activites: [],\n        code_equipement: \"\",\n        dataChange: false\n      };\n    case FETCH_CODE_EQUIPEMENT:\n      return {\n        ...state,\n        equipements: action.payload\n      };\n    case FETCH_CODE_ACTIVITE:\n      return {\n        ...state,\n        activites: action.payload,\n        activiteChargee: true\n      };\n    case SET_CODE_INSTALLATION:\n      return {\n        ...state,\n        code_installation: action.payload\n      };\n    case SET_CODE_EQUIPEMENT:\n      return {\n        ...state,\n        code_equipement: action.payload,\n        activiteChargee: false\n      };\n    case GET_CODE_POSTAL:\n      return {\n        ...state,\n        code_postaux: action.payload\n      };\n    case SELECT_BY_CODE_POSTAL:\n      return {\n        ...state,\n        installations: state.installations.filter(\n          installation =>\n            parseInt(installation.codePostal) === parseInt(action.payload)\n        ),\n        dataChange: true\n      };\n    case GET_VILLE:\n      return {\n        ...state,\n        villes: action.data\n      };\n    case SELECT_BY_VILLE:\n      return {\n        ...state,\n        installations: state.installations.filter(\n          installation => installation.nomDeLaCommune === action.payload\n        )\n      };\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;\n","import { combineReducers } from \"redux\";\nimport fetchReducer from \"./fetchReducer\";\n\nexport default combineReducers({\n  fetch: fetchReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./reducers/index\";\nimport thunk from \"redux-thunk\";\nimport { loadState, saveState } from \"../utils/persistingState\";\nimport throttle from \"lodash/throttle\";\n\nconst initialState = loadState();\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    //window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nstore.subscribe(\n  throttle(() => {\n    saveState(store.getState());\n  }, 1000)\n);\n\nexport default store;\n","export const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem(\"state\");\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = state => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(\"state\", serializedState);\n  } catch (error) {}\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchInstallationByCodeInstallation } from \"../store/actions/index\";\n\nexport class InstallationDetails extends Component {\n  componentWillMount() {\n    this.props.fetchInstallationByCodeInstallation(\n      this.props.code_installation\n    );\n  }\n\n  render() {\n    const style = {\n      listStyle: \"none\"\n    };\n    const style2 = {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignContent: \"center\"\n    };\n\n    const Installation = this.props.installation.map(installation => (\n      <div key={1}>\n        <h3>{installation.nomUsuelDeLInstallation}</h3>\n        <p>Code postal : {installation.codePostal}</p>\n        <p>Departement : {installation.departement}</p>\n        <p>Nom de la commune : {installation.nomDeLaCommune}</p>\n        <p>Adresse : {installation.nomVoie}</p>\n        <div style={style2}>\n          Dessertes possibles :\n          <ul style={style}>\n            <li>Bus : {installation.desserteBus}</li>\n            <li>Train : {installation.desserteTrain}</li>\n            <li>Metro : {installation.desserteMetro}</li>\n          </ul>\n        </div>\n      </div>\n    ));\n\n    return (\n      <div>\n        <h1>Informations supplémentaires sur l'installation</h1>\n        <div style={style2}>{Installation}</div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  installation: state.fetch.installation,\n  code_installation: state.fetch.code_installation\n});\n\nexport default connect(mapStateToProps, {\n  fetchInstallationByCodeInstallation\n})(InstallationDetails);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  fetchEquipementByCode,\n  setCodeEquipement\n} from \"../store/actions/index\";\nimport \"../css/Equipement.css\";\n\nexport class Equipements extends Component {\n  componentWillMount() {\n    this.props.fetchEquipementByCode(this.props.code_installation);\n  }\n\n  render() {\n    const Equipement = this.props.equipements.map((equipement, index) => (\n      <p\n        key={index}\n        onClick={e =>\n          this.props.setCodeEquipement(equipement.numeroDeLaFicheEquipement)\n        }\n      >\n        {equipement.equipement}\n      </p>\n    ));\n    return (\n      <div>\n        <h3>Equipements disponibles sur le site :</h3>\n        <div className=\"equipements\">{Equipement}</div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  equipements: state.fetch.equipements,\n  code_installation: state.fetch.code_installation\n});\n\nexport default connect(mapStateToProps, {\n  fetchEquipementByCode,\n  setCodeEquipement\n})(Equipements);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchActivitesByCode } from \"../store/actions\";\n\nexport class Activites extends Component {\n  componentWillMount() {\n    console.log(this.props.code_equipement);\n    if (this.props.code_equipement !== \"\") {\n      this.props.fetchActivitesByCode(this.props.code_equipement);\n    }\n    //\n  }\n\n  componentDidUpdate() {\n    //console.log(this.props.code_equipement);\n    if (\n      this.props.code_equipement !== \"\" &&\n      this.props.activiteChargee === false\n    ) {\n      this.props.fetchActivitesByCode(this.props.code_equipement);\n    }\n  }\n\n  render() {\n    if (this.props.activites === undefined) {\n      return null;\n    } else {\n      const Activites = this.props.activites.map((activite, index) => (\n        <p key={index}>{activite.activiteLibelle}</p>\n      ));\n      return (\n        <div>\n          <h3>Activités possibles sur cet equipement :</h3>\n          <div>{Activites}</div>\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = state => ({\n  activites: state.fetch.activites,\n  code_equipement: state.fetch.code_equipement,\n  activiteChargee: state.fetch.activiteChargee\n});\n\nexport default connect(mapStateToProps, { fetchActivitesByCode })(Activites);\n","import React, { Component } from \"react\";\nimport InstallationDetails from \"../components/InstallationDetails\";\nimport Equipements from \"../components/Equipements\";\nimport Activites from \"../components/Activites\";\nimport \"../css/Index.css\";\nimport { Link } from \"react-router-dom\";\n\nexport class Index extends Component {\n  render() {\n    return (\n      <div>\n        <InstallationDetails />\n        <div className=\"container-index\">\n          <Equipements />\n          <Activites />\n        </div>\n        <Link to={\"/\"}>\n          <button className=\"btn btn-primary\">Retour</button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default Index;\n","import React, { Component } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Home from \"./Pages/Home\";\nimport store from \"./store\";\nimport Index from \"./Pages/Index\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/installation/:id\" component={Index} />\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport mapboxgl from \"mapbox-gl\";\n\nmapboxgl.accessToken =\n  \"pk.eyJ1IjoiZGlkaTM3IiwiYSI6ImNrODkyejgxYzAwcmQzZmw5cGpkZ25sb3MifQ.TltNRwSWcCerlffzzs35gg\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}